#!/bin/bash

# TODO: Turn this into a UI + notification. It should provide the following function:
#       1. Split out the parec | flac | nc and put them in another user script + systemd user unit
#       2. Enable/disable listener (systemctl --user enable/disable audio-teleport.socket)
#       2. Enable/disable sender (systemctl --user enable/disable audio-teleport-stream)
#       3. Provide a way to configure the client and server
#       4. Add dumb-dumb watcher that samples low-quality audio every few seconds and disables
#          the sender after a configurable idle period.

# CONFIG
if [ ! -f ~/.config/audio ]; then
	cat <<-EOF
	HOST=raspberrypi
	PORT=12345
	EOF
fi
source ~/.config/audio-teleport

function create-null-sink(){
  pactl list short modules | awk '$2 == "module-null-sink" {print $3}' | grep -q ${SINK}
  if [ $? -ne 0 ]; then
    echo "Loading PulseAudio module-null-sink for ${SINK}"
    pactl load-module module-null-sink sink_name=${SINK} sink_properties=device.description="${SINK}"
  fi
}

function create-loopback(){
  pactl list short modules | awk '$2 == "module-loopback" {print $3}' | grep -q "${SINK}"
  if [ $? -ne 0 ]; then
    echo "Loading PulseAudio module-loopback for ${SINK}"
    pactl load-module module-loopback sink=${SINK}
  fi
}

function set-default-sink(){
  pactl info | awk '/Default Sink:/ {print $NF}' | grep -q ${SINK}
  if [ $? -ne 0 ]; then
    echo "Setting ${SINK} as the default PulseAudio sink"
    pactl set-default-sink ${SINK}
  fi
}

function capture(){
  parec \
	--latency-msec=30 \
	-d ${SINK}.monitor \
	--raw \
	--rate 48000
}

function flac_encode(){
  flac \
	-4 \
	--channels=2 \
	--sample-rate=48000 \
	--bps=16 \
	--padding=0 \
	--endian=little \
	--sign=signed \
	--silent \
       	- -
}

function stream(){
  nc ${HOST} ${PORT}
}

# SETUP
create-null-sink
create-loopback
set-default-sink

# DO IT
capture | flac_encode | stream
